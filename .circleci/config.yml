version: 2.1

jobs:
  test-and-coverage:
    working_directory: ~/project
    docker:
      - image: ubuntu:latest #cimg/python:3.10.7
        environment:
          - ENV1: "value"
    steps:
      - run: apt update && apt install -y openjdk-8-jdk, git, ssh
      - run: apt install -y python3 python3-dev python3-pip
      - checkout
      - run:
          name: install dependencies
          command: pip3 install -r requirements.txt
      - run:
          name: Run tests
          command: python3 -m pytest -sv tests/
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  plan-apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: terraform init & plan
          command: |
            terraform version
            terraform init -input=false
            terraform plan -out tfapply -var-file envs/dev/terraform.tfvars
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: terraform
          command: |
            terraform apply -auto-approve tfapply
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  plan-destroy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: terraform create destroy plan
          command: |
            terraform plan -destroy -out tfdestroy -var-file terraform.tfvars
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  destroy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: terraform destroy
          command: |
            terraform apply -auto-approve tfdestroy

workflows:
  version: 2
  plan_approve_apply:
    jobs:
      - test-and-coverage:
          name: "test-coverage"
      - plan-apply:
          context:
            - digital-prison-reporting-dev
          requires:
            - test-coverage
      - hold-apply:
          type: approval
          requires:
            - plan-apply
      - apply:
          context:
            - digital-prison-reporting-dev
          requires:
            - hold-apply
#      - plan-destroy:
#          requires:
#            - apply
#      - hold-destroy:
#          type: approval
#          requires:
#            - plan-destroy
#      - destroy:
#          requires:
#            - hold-destroy
